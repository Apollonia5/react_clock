{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","props","hasClock","console","info","toUTCString","slice","prevProps","clockName","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","rightButtonClick","event","preventDefault","leftButtonClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAYaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,KACXC,QAAS,GAHb,uDAME,WAAqB,IAAD,OAClBC,KAAKJ,MAAMG,QAAUE,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAEvB,EAAKM,MAAMC,UAEbC,QAAQC,KAAK,EAAKX,MAAMC,MAAMW,cAAcC,OAAO,IAAK,MAEzD,OAdP,gCAiBE,SAAmBC,GACbA,EAAUC,YAAcX,KAAKI,MAAMO,WAErCL,QAAQM,MAAR,uBAA8BF,EAAUC,UAAxC,eAAwDX,KAAKI,MAAMO,cApBzE,kCAwBE,WACEV,OAAOY,cAAcb,KAAKJ,MAAMG,WAzBpC,oBA4BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAc,EAAcX,KAAKI,MAAnBO,UAER,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGjB,EAAMW,cAAcC,OAAO,IAAK,YAzC3C,GAA2BM,a,MCF3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAGX,IAAMG,EAAb,4MACExB,MAAe,CACbe,UAAW,UACXN,UAAU,EACVN,QAAS,GAJb,EAuBEsB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKpB,SAAS,CAAEE,UAAU,KAzB9B,EA4BEmB,gBAAkB,WAChB,EAAKrB,SAAS,CAAEE,UAAU,KA7B9B,uDAOE,WAAqB,IAAD,OAClBL,KAAKJ,MAAMG,QAAUE,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEQ,UAAWK,QAC1B,MAEHS,SAASC,iBAAiB,cAAe1B,KAAKqB,kBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,mBAb5C,kCAgBE,WACEvB,OAAOY,cAAcb,KAAKJ,MAAMG,SAEhC0B,SAASE,oBAAoB,cAAe3B,KAAKqB,kBACjDI,SAASE,oBAAoB,QAAS3B,KAAKwB,mBApB/C,oBAgCE,WACE,MAAgCxB,KAAKJ,MAA7Be,EAAR,EAAQA,UAAWN,EAAnB,EAAmBA,SAEnB,OACE,sBAAKS,UAAU,MAAf,UACE,6CAECT,GAAY,cAAC,EAAD,CAAOM,UAAWA,EAAWN,SAAUA,WAvC5D,GAAyBU,aCbzBa,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.c3410355.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype Props = {\n  clockName: string,\n  hasClock: boolean,\n};\n\ntype State = {\n  today: Date,\n  timerId: number,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    today: new Date(),\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    this.state.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      if (this.props.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info(this.state.today.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n  }\n\n  render(): ReactNode {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n  timerId: number;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    this.state.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.rightButtonClick);\n    document.addEventListener('click', this.leftButtonClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n\n    document.removeEventListener('contextmenu', this.rightButtonClick);\n    document.removeEventListener('click', this.leftButtonClick);\n  }\n\n  rightButtonClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  leftButtonClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} hasClock={hasClock} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}